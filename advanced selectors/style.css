@font-face{
    font-family: ProtoNerd;
    src:url(/niceFonts/0xProtoNerdFont-Regular.ttf)
}
@font-face{
    font-family: losevka;
    src:url(/niceFonts/Iosevka-Regular.ttc)
}
p{
    font-family: ProtoNerd;
}
*{
    font-family: ProtoNerd;
}
body{
    background-color: rgb(0, 0, 0);
    color: green; /*text color*/
}

span.codelink{
    background:rgb(27, 1, 1);
}

main div {
/*Code*/
}

/* This rule selects only divs with a class of child*/
main > div{
    /*Code*/
}
/* This rule selects only divs with a class of grand-child*/
main > div > div {
    /*Code*/
}

/* This rule will only select the div with the class of child group2*/
.group2 + div{
    /* code*/
}
/* This rule will only select the div with the class child group3 */
.group1 + div + div {
    /*Code*/
}

/* This will select all of .group1 siblings (2nd and 3rd .child divs)*/
.group ~ div{
    /* Code*/
}

/* pseudo-class and pseud-element */
article p:first-child::first-letter {
    font-size: 190%;
    font-weight: bold;
}

/* pseudo-element */
article p::first-line{
    color:blueviolet;
    font-weight:lighter;
}

.box::before{
    content: '';
    display: block;
    width: 100px;
    height: 100px;
    background-color: rebeccapurple;
    border: 1px solid rgb(0, 152, 229);
}

/*
ul#summer-drinks li {
    font-weight: normal;
    font-size: 1.5rem;
    color: rgb(0, 255, 191)55, 255, 255);
}
*/

/* don't do this ! this doesn't work because simply using the class name by itself has a lower specificity value, so the selectors that are more specific (e.g. using id value) win.*/
.favorite {
    color: rgb(255, 0, 0);
    font-weight: bold;
}

/*  Sometimes you can just use !important for specificity. */
/*
.favorite {
    color: red !important;
    font-weight: bold !important;
}
*/

/* Be specific! Write like this !!! */

ul#summer-drinks li.favorite {
    font-weight: bold;
    color: red;
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif
}

ul#summer-drinks li {
    font-size: 1.6rem;
    font-family: 'Courier New', Courier, monospace;
}

/* or you could be even more specific. please, don't actually do this. */
/*
html body div#pagewrap ul#summer-drinks li.favorite {
    color: red;
    font-weight: bold;
}
*/

.element{
    background-color: lightyellow;
}

.element:fullscreen{
    background-color: lightpink;
}

.formEmail:focus{
    background-color: rgb(4, 255, 0);
    color:rgb(255, 0, 238);

}
#emailBtn:active{
    background-color: rgb(64, 255, 0);
}

@keyFrames colorChange{
    0% { background-color: red; }
    33.33% { background-color: blue; }
    66.66% { background-color: green; }
    100% { background-color: red; }
}

#hover{
    background-color:blue;   
}

#hover:hover{
    animation: colorChange 2s infinite;
}

a{
    text-decoration: underline;
}

/* Applies to unvisited links */
a:link{
    color:rgb(0, 221, 255);
}

a:visited{
    color:maroon;
}

/* - :root will override html. being a pseudo class it has a greater specificity than html
:root{
    color:red;
}
html{
    color:blue;
}
*/

/* Select the first li
li:nth-child(1) {)

Select every other list item starting with first 
li:nth-child(odd) { }

Select every 3rd list item starting with first
li:nth-child(3n - 2) { }

Select every 3rd list item starting with 2nd
li:nth-child(3n - 1) { }

Select every 3rd child item, as long as it has class "el"
.el:nth-child(3n) { }
*/

.module:nth-child(4){
    margin-right:0;
}

.myList:nth-child(5) {/* Selects the 5th element with class myList */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;

}

.myList:nth-child(3n) { /* Selects every 3rd element with class myList */
    font-size:1.5rem;
}

.myList:nth-child(3n + 3) { /* Selects every 3rd element with class myList, beginning with the 3rd */}

.myList:nth-child(even) {/* Selects every even element with class myList */
    color:crimson;
}

